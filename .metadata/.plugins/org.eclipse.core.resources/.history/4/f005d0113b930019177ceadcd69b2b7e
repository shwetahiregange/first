package com.javaTpoint.service;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.File;

import java.io.FileOutputStream;
import java.io.IOException;


import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.javaTpoint.StudentApplication;
import com.javaTpoint.service.StudentStatusService;

@Service
public class BufferWriteforIdService extends ExportData
{   

	@Autowired  
	private StudentStatusService studentStatusService; 

	private static final Logger logger = LogManager.getLogger(StudentApplication.class);


	private static final String FILE_PATH = "D:\\StudId\\ExcelFile.xls";

	BufferWriteforIdService INSTANCE = new BufferWriteforIdService();

	BufferWriteforIdService getInstance()
	{
		return INSTANCE;
	}

	private  BufferWriteforIdService() {}

	public String idGenerator()
	{   String out="";
	for(int i=0;i<=60;i++)
	{
		out= out+ studentStatusService.getUser(i).getId()+"   " + studentStatusService.getUser(i).isStatus()+"\n";
	}
	return out;  
	}

	@Override
	public void exportToExcel()
	{  
		// Using XSSF for xlsx format, for xls use HSSF
		Workbook workbook = new XSSFWorkbook();

		Sheet studentsSheet = workbook.createSheet("Students");
		int rowIndex = 0;

		Row row = studentsSheet.createRow(rowIndex++);

		//first place in row is id
		for(int cellIndex=0;cellIndex<=60;cellIndex++)
		{
			row.createCell(cellIndex++).setCellValue(idGenerator());
		}

		//second place in row is status
		for(int cellIndex=0;cellIndex<=60;cellIndex++)
		{
			row.createCell(cellIndex++).setCellValue(idGenerator());
		}

        try {
			FileOutputStream fos = new FileOutputStream(FILE_PATH);
			workbook.write(fos);
			fos.close();
			logger.info(FILE_PATH + " is successfully written");
			}
        	catch (IOException e)
        	{
				e.printStackTrace();
			}
        	
	 
	}


	@Override
	public void exportToPdf()
	{
		BufferedWriter bw = null;
		try
		{
			String mycontent =idGenerator();
			File file = new File("D:\\StudId\\shwet.pdf");

			/* This logic will make sure that the file 
			 * gets created if it is not present at the
			 * specified location*/
			if (!file.exists())
			{
				file.createNewFile();
			}

			FileWriter fw = new FileWriter(file);
			bw = new BufferedWriter(fw);
			bw.write(mycontent);
			logger.info("File written Successfully");

		}
		catch (IOException ioe)
		{
			ioe.printStackTrace();
		}
		finally
		{ 
			try
			{
				if(bw!=null)
					bw.close();
			}
			catch(Exception ex)
			{
				logger.error("Error in closing the BufferedWriter"+ex);
			}
		}

	}
}
