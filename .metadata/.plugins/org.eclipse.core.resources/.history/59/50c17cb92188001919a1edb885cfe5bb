package com.javaTpoint;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;


@RestController
public class HomeController {


	@Autowired  
	private UserService userService;  
	
	@Autowired  
	private IdGenerService idGenerService; 
	
	@Autowired  
	private FileRead i1;
	
	@Autowired  
	private BufferRead i2;
	
	@Autowired  
	private BufferWriteforStudId e1;
	
	@Autowired
	private BufferWriteforStudName e2;
	  

	@RequestMapping("/")  
	public String indexPage()
	{  
		return "index";  
	}
	
	@RequestMapping("/generate")  
	public String idGenerPage()
	{  
		return "generate";  
	}
	
	@RequestMapping(value="/Generate", method=RequestMethod.POST)  
	public String idGenerator()
	{  
		
		for(int i=0;i<=20;i++)
		{
			StudentStatus studentStatus=new StudentStatus();
			studentStatus.setId((int)i);
			studentStatus.setStatus(false);
			idGenerService.addUser(studentStatus);
		}
		
		return "successpage";  
		
	}

	@RequestMapping("/addstud")  
	public String home1(ModelMap model){ 

		return "addstud";  
	}
	@RequestMapping("/searchstud")  
	public String home2(){  
		return "searchstud";  
	}
	@RequestMapping(value="/Search", method=RequestMethod.GET)  
	public ModelAndView getUser(@RequestParam("id")int id, Model m){  

		m.addAttribute("ss", userService.getUser(id)) ;
		return new ModelAndView("studentsearch");
	}  
	@RequestMapping(value="/liststud", method = RequestMethod.GET)  
	public ModelAndView getUsers(StudentName studentName,Model m){    
		m.addAttribute("tt", userService.getAllUsers());

		return new ModelAndView("liststud");
	}

	@RequestMapping(value="/deleteStud")  
	public String delete(){  
		return "deleteStud";  
	}
	@RequestMapping(value="/Delete" ,method=RequestMethod.POST)  
	public String deleteUser(int id){ 
		userService.delete(id);
		StudentStatus updateRow= idGenerService.getUser(id);
		updateRow.setStatus(false);
		idGenerService.addUser(updateRow);

		return "successpage";  
	}

	@RequestMapping(value="/updateStud")  
	public String update(){  
		return "updateStud";  
	}

	@RequestMapping(value="/Update", method=RequestMethod.POST)  
	public String updateUser(StudentName studentName){  
		StudentName updateRecord= userService.getUser(studentName.getId());
		updateRecord.setName(studentName.getName());
		userService.addUser(updateRecord);
		return "successpage";  
	}

	@RequestMapping(value="/Addition", method = RequestMethod.POST)  
	public String addUser( int id,StudentName studentName)
	{  
		StudentStatus updateRow= idGenerService.getUser(id);
		updateRow.setStatus(true);
		userService.addUser(studentName);
		idGenerService.addUser(updateRow); 
		return "successpage";
	}
	
	
//	Page that Returns the Loadid using FileReader 
	
	@RequestMapping(value="/loadid")  
	public String loadId(){  
		return "loadid";  
	}
	
//		Method of loading FileReader
	
	@RequestMapping(value="/Load", method = RequestMethod.POST)  
	public String fileId(FileRead fileRead)
	{  
		i1.load();
		return "successpage";
	}
	
	@RequestMapping(value="/Load1", method = RequestMethod.POST)  
	public String fileId(BufferRead bufferRead)
	{  

    	i2.load();
		return "successpage";
	}
	
	@RequestMapping(value="/writeid")  
	public String writeId()
	{  
		return "writeid";  
	}
	
	@RequestMapping(value="/writestatus")  
	public String writeStatus()
	{  
		return "writestatus";  
	}

	@RequestMapping(value="/Write1", method = RequestMethod.POST)  
	public String textName(BufferWriteforStudId bufferWriteforStudId)
	{  
		e1.exportToText();
		return "successpage";
	}
	
	@RequestMapping(value="/Write2", method = RequestMethod.POST)  
	public String excelName(BufferWriteforStudId bufferWriteforStudId)
	{  
		e1.exportToExcel();
		return "successpage";
	}
	
	@RequestMapping(value="/Write3", method = RequestMethod.POST)  
	public String pdfName(BufferWriteforStudId bufferWriteforStudId)
	{  
		e1.exportToPdf();
		return "successpage";
	}
	
	@RequestMapping(value="/writename")  
	public String writeName()
	{  
		return "writename";  
	}
	
	@RequestMapping(value="/Write4", method = RequestMethod.POST)  
	public String textName(BufferWriteforStudName bufferWriteforStudName )
	{  
		e2.exportToText1();
		return "successpage";
	}
	
	@RequestMapping(value="/Write5", method = RequestMethod.POST)  
	public String excelName(BufferWriteforStudName bufferWriteforStudName)
	{  
		e2.exportToExcel();
		return "successpage";
	}
	
	@RequestMapping(value="/Write6", method = RequestMethod.POST)  
	public String pdfName(BufferWriteforStudName bufferWriteforStudName)
	{  
		e2.exportToPdf();
		return "successpage";
	}
	
	

}

